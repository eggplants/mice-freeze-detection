name: Build
on:
  # [workflow_dispatch]
  push:
    tags:
      - "v*"

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt

      - name: Build
        run: pyinstaller -F src/main.py -i img/icon.ico -n mice_freeze_detector

      - name: Print dist
        run: ls dist

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: mice_freeze_detector-windows
          path: dist/mice_freeze_detector.exe

  macOS-build:
    runs-on: macOS-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: |
          python -m pip install -U pip PyInstaller
          python -m pip install -r requirements.txt

      - name: Build
        run: pyinstaller -F src/main.py -i img/icon.ico -n mice_freeze_detector

      - name: Print dist
        run: ls dist

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: mice_freeze_detector-macos
          path: dist/mice_freeze_detector

  ubuntu-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout commit
        uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@master
        with: { python-version: 3.8 }

      - name: Upgrade pip
        run: |
          python -m pip install -U pip PyInstaller
          python -m pip install -r requirements.txt

      - name: Build
        run: pyinstaller -F src/main.py -i img/icon.ico -n mice_freeze_detector

      - name: Print dist
        run: ls dist

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: mice_freeze_detector-linux
          path: dist/mice_freeze_detector

  release:
    needs: [ubuntu-build, macOS-build, windows-build]
    runs-on: ubuntu-latest

    steps:
      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: mice_freeze_detector-linux

      - name: Download Mac
        uses: actions/download-artifact@v1
        with:
          name: mice_freeze_detector-macos

      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: mice_freeze_detector-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Zip
        run: |
          tar -C mice_freeze_detector-macos -pczvf mice_freeze_detector-macos.tar.gz mice_freeze_detector
          tar -C mice_freeze_detector-linux -pczvf mice_freeze_detector-linux.tar.gz mice_freeze_detector
          zip --junk-paths mice_freeze_detector-windows ./tracking_GUI-windows/mice_freeze_detector.exe

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"

      - name: Append mac Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mice_freeze_detector-macos.tar.gz
          asset_name: mice_freeze_detector-macos_${{ env.RELEASE_VERSION }}.tar.gz
          asset_content_type: application/gzip

      - name: Append linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mice_freeze_detector-linux.tar.gz
          asset_name: mice_freeze_detector-linux_${{ env.RELEASE_VERSION }}.tar.gz
          asset_content_type: application/gzip

      - name: Append win Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mice_freeze_detector-windows.zip
          asset_name: mice_freeze_detector-windows_${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
